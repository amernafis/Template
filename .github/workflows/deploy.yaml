name: Build, Push to GHCR, and Deploy
env:
  PACKAGE_NAME: 'template'

on:
  push:
    branches:
      - main

jobs:
  versioning-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      new-version: ${{ steps.semantic-release.outputs.new_release_version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create Semantic Release config
        run: |
          echo '{
            "branches": ["main"],
            "plugins": [
              "@semantic-release/commit-analyzer",
              "@semantic-release/release-notes-generator",
              "@semantic-release/github"
            ]
          }' > .releaserc.json

      - name: Semantic Release
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GHCR_PAT }}

  build-and-push:
    runs-on: ubuntu-latest
    needs: versioning-and-release
    env:
      NEW_VERSION: ${{ needs.versioning-and-release.outputs.new-version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push Docker Image to GHCR
        run: |
          IMAGE_NAME=ghcr.io/amernafis/$PACKAGE_NAME

          if [ -z "$NEW_VERSION" ]; then
            NEW_VERSION="latest"
            echo "No version released, using 'latest' tag"
          fi

          docker build -f ./docker/production/nginx/Dockerfile -t $IMAGE_NAME:$NEW_VERSION -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:$NEW_VERSION
          docker push $IMAGE_NAME:latest

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build-and-push

  #   steps:
  #     - name: Install and configure the Koyeb CLI
  #       uses: koyeb-community/koyeb-actions@v2
  #       with:
  #         api_token: "${{ secrets.KOYEB_API_KEY }}"

  #     - name: Redeploy Koyeb service
  #       run: koyeb service redeploy intelligent-estel/my-app
